PUSH 2
LOADL 47
LOADL 53
STORE (2) 0[SB]
LOADL 0
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@57536d79
LOAD (2) 0[SB]
POP (0) 1
STORE (1) 2[SB]
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@3b0143d3
LOAD (2) 0[SB]
POP (1) 1
STORE (1) 3[SB]
PUSH 1
LOADA 2[SB]
STORE (1) 4[SB]
PUSH 1
LOADA 3[SB]
STORE (1) 5[SB]
PUSH 1
LOADL 0
STORE (1) 6[SB]
LOADA 6[SB]
LOADA 4[SB]
STOREI (1)
PUSH 1
LOADL 0
STORE (1) 7[SB]
LOADA 7[SB]
LOADA 5[SB]
STOREI (1)
;((*a) * (*b))
;(((*a) * (*b)) != test)
begin_while_1
LOAD (1) 4[SB]
LOADI (1)
LOAD (1) 5[SB]
LOADI (1)
SUBR IMul
LOADL 0
SUBR INeq
JUMPIF (0) end_while_1
;((*a) > (*b))
LOAD (1) 4[SB]
LOADI (1)
LOAD (1) 5[SB]
LOADI (1)
SUBR IGtr
JUMPIF (0) elseBranch2
;((*a) - (*b))
LOAD (1) 4[SB]
LOADI (1)
LOAD (1) 5[SB]
LOADI (1)
SUBR ISub
LOADA 6[SB]
STOREI (1)
JUMP endCondition2
elseBranch2
;((*b) - (*a))
LOAD (1) 5[SB]
LOADI (1)
LOAD (1) 4[SB]
LOADI (1)
SUBR ISub
LOADA 7[SB]
STOREI (1)
endCondition2
JUMP begin_while_1
end_while_1
PUSH 1
LOAD (1) 4[SB]
LOADI (1)
STORE (1) 8[SB]
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@369f73a2
;(res == test)
LOAD (1) 8[SB]
LOADL 0
SUBR IEq
JUMPIF (0) elseBranch3
LOAD (1) 5[SB]
LOADI (1)
LOADA 8[SB]
STOREI (1)
JUMP endCondition3
elseBranch3
endCondition3
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@1f28c152
LOAD (1) 8[SB]
SUBR IOut
HALT

